var libFable = require('fable').new({});
var libFoxHound = require('../source/FoxHound.js');

var _AnimalSchema = (
[
	{ Column: "IDAnimal",        Type:"AutoIdentity" },
	{ Column: "GUIDAnimal",      Type:"AutoGUID" },
	{ Column: "CreateDate",      Type:"CreateDate" },
	{ Column: "CreatingIDUser",  Type:"CreateIDUser" },
	{ Column: "UpdateDate",        Type:"UpdateDate" },
	{ Column: "UpdatingIDUser", Type:"UpdateIDUser" },
	{ Column: "Deleted",         Type:"Deleted" },
	{ Column: "DeletingIDUser",  Type:"DeleteIDUser" },
	{ Column: "DeleteDate",      Type:"DeleteDate" }
]);

var _AnimalSchemaWithoutDeleted = (
[
	{ Column: "IDAnimal",        Type:"AutoIdentity" },
	{ Column: "GUIDAnimal",      Type:"AutoGUID" },
	{ Column: "CreateDate",      Type:"CreateDate" },
	{ Column: "CreatingIDUser",  Type:"CreateIDUser" },
	{ Column: "UpdateDate",        Type:"UpdateDate" },
	{ Column: "UpdatingIDUser", Type:"UpdateIDUser" }
]);

var tmpQuery = libFoxHound.new(libFable)
	.setDialect('MeadowEndpoints')
	.setScope('Animal')
	.setDataElements(['Name', 'Age', 'Cost'])
	.setCap(100)
	.addFilter('Age', '25')
	.addFilter('', '', '(')
	.addFilter('Color', 'Red')
	.addFilter('Color', 'Green', '=', 'OR')
	.addFilter('', '', ')')
	.addFilter('Description', '', 'IS NOT NULL')
	.addFilter('IDOffice', [10, 11, 15, 18, 22], 'IN');
tmpQuery.setLogLevel(3).addSort('Age');
// Build the query
tmpQuery.buildReadQuery();
// This is the query generated by the MeadowEndpoints dialect
libFable.log.trace('Select Query', tmpQuery.query);

console.log(tmpQuery.query.body);
